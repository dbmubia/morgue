/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package motuary;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Locale;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Range_Rover_Sport
 */
public class Servicesdialog extends javax.swing.JDialog {

    /**
     * Creates new form NewJDialog
     */
    public Servicesdialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        getservices();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        submitservicebt = new javax.swing.JButton();
        closeservicesdialog = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        servicestable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jToolBar1.setRollover(true);

        submitservicebt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/tick.png"))); // NOI18N
        submitservicebt.setText("Submit");
        submitservicebt.setFocusable(false);
        submitservicebt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        submitservicebt.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        submitservicebt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitservicebtActionPerformed(evt);
            }
        });
        jToolBar1.add(submitservicebt);

        closeservicesdialog.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/button_cancel.png"))); // NOI18N
        closeservicesdialog.setText("Close");
        closeservicesdialog.setFocusable(false);
        closeservicesdialog.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        closeservicesdialog.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        closeservicesdialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeservicesdialogActionPerformed(evt);
            }
        });
        jToolBar1.add(closeservicesdialog);

        servicestable.setAutoCreateRowSorter(true);
        servicestable.setBackground(new java.awt.Color(66, 186, 159));
        servicestable.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        servicestable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Service Code", "Service Description", "Service Cost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        servicestable.setRowHeight(30);
        servicestable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                servicestableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(servicestable);
        if (servicestable.getColumnModel().getColumnCount() > 0) {
            servicestable.getColumnModel().getColumn(0).setMinWidth(80);
            servicestable.getColumnModel().getColumn(0).setPreferredWidth(5);
            servicestable.getColumnModel().getColumn(0).setMaxWidth(100);
            servicestable.getColumnModel().getColumn(1).setMinWidth(400);
            servicestable.getColumnModel().getColumn(1).setPreferredWidth(50);
            servicestable.getColumnModel().getColumn(1).setMaxWidth(400);
            servicestable.getColumnModel().getColumn(2).setPreferredWidth(10);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 713, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void submitservicebtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitservicebtActionPerformed
        pushsevices();
    }//GEN-LAST:event_submitservicebtActionPerformed

    private void closeservicesdialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeservicesdialogActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_closeservicesdialogActionPerformed

    private void servicestableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_servicestableMouseClicked
        // pushsevices();
    }//GEN-LAST:event_servicestableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Servicesdialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Servicesdialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Servicesdialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Servicesdialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Servicesdialog dialog = new Servicesdialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });

    }
    private String first, second, third;
    private static java.util.Date activeDate = new java.util.Date();
    public static SimpleDateFormat sdf = new SimpleDateFormat("dd MMM yyyy", Locale.getDefault());
    public static String date = sdf.format(activeDate);
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeservicesdialog;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTable servicestable;
    private javax.swing.JButton submitservicebt;
    // End of variables declaration//GEN-END:variables

    private void getservices() {

        try {
            String strSQL = "SELECT * from services";
            ResultSet rs;
            DBConnection getCn = new DBConnection();
            Connection cn = getCn.getConnection();
            Statement st = cn.createStatement();

            rs = st.executeQuery(strSQL);

            servicestable.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (Exception e) {
            System.out.println(e);

        }

    }

    private void pushsevices() {

        int row = servicestable.getSelectedRow();
        first = servicestable.getValueAt(row, 0).toString();
        second = servicestable.getValueAt(row, 1).toString();
        third = servicestable.getValueAt(row, 2).toString();

        if ((first == " ") || (second == "") || (third == " ")) {
            JOptionPane.showMessageDialog(this, " You are required to select a Service", "alert", JOptionPane.WARNING_MESSAGE, null);
        } else {

            String insertservice = "INSERT INTO invoice_tb (admin_no_finance,service_code_finance,cost_of_service,date) "
                    + " VALUES ('" + 10 + "','" + first + "','" + third + "','" + date + "')";

            Data data = new Data();
            data.ExecuteSQL(insertservice);
            data = null;
            
            JOptionPane.showMessageDialog(rootPane, "Registration Completed successfully.");
            dispose();
            
        }

    }

}
